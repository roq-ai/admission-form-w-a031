generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model address {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  street      String?  @db.VarChar(255)
  city        String?  @db.VarChar(255)
  state       String?  @db.VarChar(255)
  country     String?  @db.VarChar(255)
  postal_code String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
}

model client {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  father_name    String?  @db.VarChar(255)
  qualification  String?  @db.VarChar(255)
  course_to_join String?  @db.VarChar(255)
  address        String?  @db.VarChar(255)
  phone_number   String?  @db.VarChar(255)
  aadhar_no      String?  @db.VarChar(255)
  description    String?  @db.VarChar(255)
  name           String   @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user_id        String   @db.Uuid
  tenant_id      String   @db.VarChar(255)
  user           user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model course {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  duration    Int?
  start_date  DateTime? @db.Date
  end_date    DateTime? @db.Date
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
}

model phone {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  number     String   @db.VarChar(255)
  type       String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model qualification {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  level       Int?
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
}

model user {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String   @unique @db.VarChar(255)
  firstName   String?  @db.VarChar(255)
  lastName    String?  @db.VarChar(255)
  roq_user_id String   @db.VarChar(255)
  tenant_id   String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  client      client[]
}
